-- colors/colorscheme.lua

local colors = {
    -- content here will not be touched
    -- PATCH_OPEN
Normal = {fg = "#C9CACF", bg = "#1A1B1E"},
Identifier = {link = "Normal"},
NormalFloat = {link = "Normal"},
PmenuThumb = {link = "Normal"},
Question = {link = "Normal"},
StatusLine = {link = "Normal"},
StatusLineNC = {link = "Normal"},
["@variable"] = {link = "Normal"},
["@variable.go"] = {link = "Normal"},
Added = {fg = "#72AB2B"},
DiffAdd = {link = "Added"},
NvimTreeGitNew = {link = "Added"},
Changed = {fg = "#F2C45A"},
DiffChange = {link = "Changed"},
NvimTreeGitRenamed = {link = "Changed"},
NvimTreeGitStaged = {link = "Changed"},
Comment = {fg = "#3E5646"},
["@comment"] = {link = "Comment"},
["@text.literal"] = {link = "Comment"},
Constant = {fg = "#C87EBC"},
Boolean = {link = "Constant"},
cConstant = {link = "Constant"},
cppConstant = {link = "Constant"},
cudaConstant = {link = "Constant"},
["@constant"] = {link = "Constant"},
["@constant.builtin"] = {link = "Constant"},
Cursor = {fg = "#1A1B1E", bg = "#D08E6D"},
CursorIM = {link = "Cursor"},
FzfLuaCursor = {link = "Cursor"},
HopCursor = {link = "Cursor"},
TermCursor = {link = "Cursor"},
CursorLine = {bg = "#2D3434"},
CursorLineNr = {fg = "#C9CACF", bold = true},
DiagnosticERRORReverse = {fg = "#1A1B1E", bg = "#F75565"},
DiagnosticHINTReverse = {fg = "#1A1B1E", bg = "#778CF9"},
DiagnosticINFOReverse = {fg = "#1A1B1E", bg = "#558BF7"},
DiagnosticWARNReverse = {fg = "#1A1B1E", bg = "#F2C45A"},
Directory = {fg = "#68B1E8"},
NvimTreeEmptyFolderName = {link = "Directory"},
NvimTreeFolderName = {link = "Directory"},
NvimTreeOpenedFolderName = {link = "Directory"},
NvimTreeSymlinkFolderName = {link = "Directory"},
qfFileName = {link = "Directory"},
Error = {fg = "#F75565"},
DiagnosticError = {link = "Error"},
ErrorMsg = {link = "Error"},
Function = {fg = "#56A8F5"},
WhichKey = {link = "Function"},
cFunction = {link = "Function"},
cFunctionPointer = {link = "Function"},
["@function"] = {link = "Function"},
["@lsp.typemod.function.defaultLibrary.cpp"] = {link = "Function"},
FzfLuaBorder = {bg = "#18191B"},
FzfLuaNormal = {bg = "#18191B"},
Hint = {fg = "#778CF9"},
DiagnosticHint = {link = "Hint"},
IncSearch = {fg = "#9192BA", bg = "#46484E"},
Search = {link = "IncSearch"},
Info = {fg = "#558BF7"},
DiagnosticInfo = {link = "Info"},
Keyword = {fg = "#D08E6D"},
PreProc = {link = "Keyword"},
Statement = {link = "Keyword"},
["@type.builtin"] = {link = "Keyword"},
["@type.qualifier"] = {link = "Keyword"},
LineNr = {fg = "#696D77"},
LspCodeLens = {fg = "#314438", italic = true},
LspCodeLensSeparator = {fg = "#314438"},
LspCodeLensText = {fg = "#6B9479"},
ModeMsg = {fg = "#72AB2B"},
MoreMsg = {fg = "#72AB2B"},
Number = {fg = "#2AABB7"},
Float = {link = "Number"},
["@float"] = {link = "Number"},
["@number"] = {link = "Number"},
NvimTreeFolderIcon = {fg = "#56A8F5"},
NvimTreeGitDirty = {fg = "#56A8F5"},
NvimTreeGitMerge = {fg = "#778CF9"},
Operator = {fg = "#C9CACF"},
Delimiter = {link = "Operator"},
["@operator"] = {link = "Operator"},
Pmenu = {bg = "#0C0F13"},
PmenuSbar = {bg = "#46484E"},
PmenuSel = {bg = "#30485A"},
QuickFixLine = {fg = "#778CF9"},
RainbowDelimiterBlue = {fg = "#6D93DF"},
RainbowDelimiterCyan = {fg = "#8A99E5"},
RainbowDelimiterGreen = {fg = "#70983E"},
RainbowDelimiterOrange = {fg = "#DBBB70"},
RainbowDelimiterRed = {fg = "#DF6D78"},
RainbowDelimiterViolet = {fg = "#B59AE5"},
RainbowDelimiterYellow = {fg = "#DBBB70"},
Removed = {fg = "#F75565"},
DiffDelete = {link = "Removed"},
NvimTreeGitDeleted = {link = "Removed"},
RenderMarkdownCode = {bg = "#0C0F13"},
RenderMarkdownCodeInline = {bg = "#0C0F13"},
RenderMarkdownCodeQuote = {bg = "#0C0F13"},
RenderMarkdownH1 = {fg = "#56A8F5", bg = "#1A1B1E"},
RenderMarkdownH1Bg = {fg = "#1A1B1E", bg = "#56A8F5"},
RenderMarkdownH2 = {fg = "#CE8BDF", bg = "#1A1B1E"},
RenderMarkdownH2Bg = {fg = "#1A1B1E", bg = "#CE8BDF"},
RenderMarkdownH3 = {fg = "#1A1B1E", bg = "#D08E6D"},
RenderMarkdownH3Bg = {fg = "#D08E6D", bg = "#1A1B1E"},
RenderMarkdownH4 = {fg = "#1A1B1E", bg = "#C87EBC"},
RenderMarkdownH4Bg = {fg = "#C87EBC", bg = "#1A1B1E"},
RenderMarkdownH5Bg = {fg = "#69AB72"},
RenderMarkdownH6Bg = {fg = "#56A8F5"},
SagaCount = {fg = "#C9CACF", bg = "#1A1B1E", bold = true},
Special = {fg = "#C87EBC"},
["@attribute.builtin"] = {link = "Special"},
["@function.builtin"] = {link = "Special"},
["@lsp.typemod.function.defaultLibrary"] = {link = "Special"},
["@markup"] = {link = "Special"},
["@module.builtin"] = {link = "Special"},
["@punctuation.special"] = {link = "Special"},
["@tag.builtin"] = {link = "Special"},
["@variable.builtin"] = {link = "Special"},
["@variable.cmake"] = {link = "Special"},
["@variable.parameter.builtin"] = {link = "Special"},
String = {fg = "#69AB72"},
Character = {link = "String"},
cString = {link = "String"},
cppRawString = {link = "String"},
cppString = {link = "String"},
["@character"] = {link = "String"},
["@string"] = {link = "String"},
TabLineSel = {fg = "#D08E6D", bg = "#1A1B1E"},
TelescopeBorder = {bg = "#18191B"},
TelescopeNormal = {bg = "#18191B"},
TelescopePromptPrefix = {fg = "#558BF7"},
TelescopeSelection = {bg = "#18191B"},
TelescopeSelectionCaret = {fg = "#F75565"},
Todo = {fg = "#C87EBC", bold = true},
["@comment.todo"] = {link = "Todo"},
["@text.todo"] = {link = "Todo"},
Type = {fg = "#9192BA"},
Typedef = {link = "Type"},
cType = {link = "Type"},
cppType = {link = "Type"},
cudaType = {link = "Type"},
["@constructor"] = {link = "Type"},
["@lsp.type"] = {link = "Type"},
["@lsp.type.typeParameter"] = {link = "Type"},
["@type"] = {link = "Type"},
["@type.definition"] = {link = "Type"},
Visual = {bg = "#46484E"},
Warn = {fg = "#F2C45A"},
WarningMsg = {link = "Warn"},
DiagnosticWarn = {link = "WarningMsg"},
["@keyword.directive"] = {fg = "#B3AD61"},
["@keyword.import"] = {fg = "#B3AD61"},
["@lsp.mod.readonly"] = {fg = "#C87EBC", bold = true},
["@lsp.type.builtin"] = {fg = "#D08E6D"},
["@lsp.type.enumMember"] = {fg = "#C87EBC", italic = true},
["@lsp.type.macro"] = {fg = "#8E8925"},
["@lsp.typemod.vairable.readonly"] = {fg = "#C87EBC", bold = true},
["@markup.strong.markdown_inline"] = {fg = "#2AABB7", bold = true},
["@namespace"] = {fg = "#9192BA"},
["@property"] = {fg = "#9879A9", bold = true},
    -- PATCH_CLOSE
    -- content here will not be touched
}

-- colorschemes generally want to do this
vim.cmd("highlight clear")
vim.cmd("set t_Co=256")
vim.cmd("let g:colors_name='my_theme'")

-- apply highlight groups
for group, attrs in pairs(colors) do
    vim.api.nvim_set_hl(0, group, attrs)
end

